<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiionTypeContent" xml:space="preserve">
    <value>Important</value>
  </data>
  <data name="ActionTypAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="ActionType" xml:space="preserve">
    <value>Activity Type</value>
  </data>
  <data name="ActionTypeActivity" xml:space="preserve">
    <value>Secondary</value>
  </data>
  <data name="ActivityType" xml:space="preserve">
    <value>Activity type</value>
  </data>
  <data name="AddEmployees" xml:space="preserve">
    <value>Add {!Users}</value>
  </data>
  <data name="AllProductsTitle" xml:space="preserve">
    <value>All Products</value>
  </data>
  <data name="BtnChangeProfile" xml:space="preserve">
    <value>Edit Profile</value>
  </data>
  <data name="BtnChangeSettings" xml:space="preserve">
    <value>Portal Settings</value>
  </data>
  <data name="BtnHiddenFilter" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="ButtonCreateImage" xml:space="preserve">
    <value>Create Drawing</value>
  </data>
  <data name="ButtonCreatePresentation" xml:space="preserve">
    <value>Create Presentation</value>
  </data>
  <data name="ButtonCreateSpreadsheet" xml:space="preserve">
    <value>Create Spreadsheet</value>
  </data>
  <data name="ButtonCreateText" xml:space="preserve">
    <value>Create Document</value>
  </data>
  <data name="DemoUserName" xml:space="preserve">
    <value>DEMO mode</value>
  </data>
  <data name="DeselectAllModules" xml:space="preserve">
    <value>Uncheck all</value>
  </data>
  <data name="EmptyListDocumentsHead" xml:space="preserve">
    <value>The list of documents is empty</value>
  </data>
  <data name="EmptyListDocumentsDescr" xml:space="preserve">
    <value>{0}Create{1} files right on your portal or {2}upload{3} them here to be able to {4}open{5} and {6}edit{7} them using the TeamLab portal editor, share them with friends or colleagues, organize into folders.</value>
  </data>
  <data name="ButtonLearnMore" xml:space="preserve">
    <value>Learn more...</value>
  </data>
  <data name="TooltipCreate" xml:space="preserve">
    <value>You can create documents (.doc), spreadsheets (.xlsx), presentations (.pptx) and drawings (.svg) and download them to most popular formats.</value>
  </data>
  <data name="TooltipUpload" xml:space="preserve">
    <value>You can upload to Documents any files you want.</value>
  </data>
  <data name="TooltipOpen" xml:space="preserve">
    <value>You can open the files with the following extentions: {0}.</value>
  </data>
  <data name="TooltipEdit" xml:space="preserve">
    <value>You can edit the following files: {0}.</value>
  </data>
  <data name="ErrorMassage_SpecCharacter" xml:space="preserve">
    <value>Title can't contain any of the following characters:</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="LastMonth" xml:space="preserve">
    <value>This month</value>
  </data>
  <data name="LastWeek" xml:space="preserve">
    <value>This week</value>
  </data>
  <data name="LastYear" xml:space="preserve">
    <value>This year</value>
  </data>
  <data name="LblFilterButton" xml:space="preserve">
    <value>Add Filter</value>
  </data>
  <data name="LblFrom" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="LblSelect" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="LblSort" xml:space="preserve">
    <value>Sort By</value>
  </data>
  <data name="LblTo" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="ListModules" xml:space="preserve">
    <value>Select modules</value>
  </data>
  <data name="LogoutButton" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="NewDocument" xml:space="preserve">
    <value>New Document</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="QuickLinkDeletingIsInProgress" xml:space="preserve">
    <value>Deleting quick link...</value>
  </data>
  <data name="QuickLinkEditIsInProgress" xml:space="preserve">
    <value>Saving Quick Link...</value>
  </data>
  <data name="QuickLinksActionsColumn" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="QuickLinksAddOnTopPanelColumn" xml:space="preserve">
    <value>Add to top panel</value>
  </data>
  <data name="QuickLinksDeleteConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete the {0} quick link?</value>
  </data>
  <data name="QuickLinksDeleteLink" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="QuickLinksDeleteLinkTitle" xml:space="preserve">
    <value>Delete quick link</value>
  </data>
  <data name="QuickLinksDeletePopupWindowTitle" xml:space="preserve">
    <value>Delete Quick Link</value>
  </data>
  <data name="QuickLinksDownloadLink" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="QuickLinksEditLink" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="QuickLinksEditLinkTitle" xml:space="preserve">
    <value>Edit quick link</value>
  </data>
  <data name="QuickLinksModuleColumn" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="QuickLinksNameColumn" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="RemoveFromList" xml:space="preserve">
    <value>Remove from list</value>
  </data>
  <data name="SelectAllModules" xml:space="preserve">
    <value>Check all</value>
  </data>
  <data name="SignInAsTitle" xml:space="preserve">
    <value>Signed in as</value>
  </data>
  <data name="TimePeriod" xml:space="preserve">
    <value>Select time period</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>Yesterday</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="Everyone" xml:space="preserve">
    <value>Everyone</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>ver.</value>
  </data>
  <data name="AttachOfProjectDocuments" xml:space="preserve">
    <value>Attach File from Project Documents</value>
  </data>
  <data name="NewFile" xml:space="preserve">
    <value>New File</value>
  </data>
  <data name="NoFiles" xml:space="preserve">
    <value>There are no files</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>Upload File</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DeleteFile" xml:space="preserve">
    <value>Delete File</value>
  </data>
  <data name="NotBeUndone" xml:space="preserve">
    <value>Note: This action cannot be undone.</value>
  </data>
  <data name="QuestionDeleteFile" xml:space="preserve">
    <value>Are you sure you want to delete this file?</value>
  </data>
  <data name="TitleEditingFile" xml:space="preserve">
    <value>It is currently being edited</value>
  </data>
  <data name="LblFilterPlaceholder" xml:space="preserve">
    <value>enter the text</value>
  </data>
  <data name="LblFilter" xml:space="preserve">
    <value>Filter:</value>
  </data>
  <data name="EmptyDocsDescription" xml:space="preserve">
    <value>The documents and image files you create or upload for your 
project are kept in this section. These documents are available 
to all project participants immediately after they are created. 
Attach files from your computer to the task and they 
will appear in this list.</value>
  </data>
  <data name="EmptyDocsHeaderDescription" xml:space="preserve">
    <value>No files to be displayed in this section.</value>
  </data>
  <data name="ProjectDocuments" xml:space="preserve">
    <value>Project Documents</value>
  </data>
  <data name="CheckAll" xml:space="preserve">
    <value>Check All</value>
  </data>
  <data name="AttachFiles" xml:space="preserve">
    <value>Attach files</value>
  </data>
</root>