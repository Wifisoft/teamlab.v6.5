<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCase" xml:space="preserve">
    <value>Добавить мероприятие</value>
  </data>
  <data name="AddFirstCase" xml:space="preserve">
    <value>Add the first case</value>
  </data>
  <data name="AddNoteToCase" xml:space="preserve">
    <value>Добавить событие к мероприятию «{0}»</value>
  </data>
  <data name="AddThisCaseButton" xml:space="preserve">
    <value>Добавить это мероприятие</value>
  </data>
  <data name="AllCases" xml:space="preserve">
    <value>Все мероприятия</value>
  </data>
  <data name="Case" xml:space="preserve">
    <value>Мероприятие</value>
  </data>
  <data name="CaseTitle" xml:space="preserve">
    <value>Название мероприятия</value>
  </data>
  <data name="DeleteThisCase" xml:space="preserve">
    <value>Удалить это мероприятие</value>
  </data>
  <data name="EditCase" xml:space="preserve">
    <value>Редактировать мероприятие</value>
  </data>
  <data name="EditCaseHeader" xml:space="preserve">
    <value>Отредактировать мероприятие «{0}»</value>
  </data>
  <data name="EmptyContentCasesHeader" xml:space="preserve">
    <value>The case list is empty</value>
  </data>
  <data name="PrivateCaseLabelTex" xml:space="preserve">
    <value>Да, я понимаю. Добавить мероприятие как приватное.</value>
  </data>
  <data name="PrivateCaseTitle" xml:space="preserve">
    <value>Приватное мероприятие</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Сохранить изменения</value>
  </data>
  <data name="EmptyPeopleInCaseContent" xml:space="preserve">
    <value>The participant list is empty</value>
  </data>
  <data name="EmptyPeopleInCaseDescript" xml:space="preserve">
    <value>Add participants to your case from the list of companies or persons. After this is done you will know who is going to take part in the upcoming events associated with this case.</value>
  </data>
  <data name="CaseStatus" xml:space="preserve">
    <value>Статус</value>
  </data>
  <data name="CaseStatusClosed" xml:space="preserve">
    <value>Закрыто</value>
  </data>
  <data name="CaseStatusOpened" xml:space="preserve">
    <value>Открыто</value>
  </data>
  <data name="CasesByStatus" xml:space="preserve">
    <value>По статусу</value>
  </data>
  <data name="AddingCaseProggress" xml:space="preserve">
    <value>Добавление мероприятия...</value>
  </data>
  <data name="PrivateCaseUserListText" xml:space="preserve">
    <value>Пользователи, имеющие доступ к мероприятию</value>
  </data>
  <data name="EmptyContentCasesFilterHeader" xml:space="preserve">
    <value>No cases to be displayed for this filter here</value>
  </data>
  <data name="EmptyContentCasesDescribe" xml:space="preserve">
    <value>Cases allow you to keep in one and the same place all the correspondence history, assign tasks, upload documents for the contacts who take part in a common event. For instance, it can be a team training or exhibition organization.</value>
  </data>
  <data name="MembersCase" xml:space="preserve">
    <value>Участники мероприятия</value>
  </data>
  <data name="PrivatePanelCheckBoxLabel" xml:space="preserve">
    <value>Ограничить доступ к мероприятию</value>
  </data>
  <data name="AddThisAndCreateCaseButton" xml:space="preserve">
    <value>Добавить и Создать мероприятие</value>
  </data>
  <data name="PeopleInCase" xml:space="preserve">
    <value>Участники</value>
  </data>
  <data name="EmptyContentCasesFilterDescribe" xml:space="preserve">
    <value>No cases matching your filter can be displayed in this section. Please select other filter options or clear filter to view all the cases in this section. Or you can create the case if it is absent from the list.</value>
  </data>
  <data name="CloseCase" xml:space="preserve">
    <value>Close case</value>
  </data>
  <data name="OpenCase" xml:space="preserve">
    <value>Open a case</value>
  </data>
  <data name="TotalCases" xml:space="preserve">
    <value>Total cases</value>
  </data>
  <data name="CasesTag" xml:space="preserve">
    <value>Cases Tag</value>
  </data>
  <data name="CasesTagList" xml:space="preserve">
    <value>Cases Tag List</value>
  </data>
  <data name="ImportCases" xml:space="preserve">
    <value>Import cases</value>
  </data>
  <data name="CasesParticipant" xml:space="preserve">
    <value>Cases Participant</value>
  </data>
  <data name="CasesParticipants" xml:space="preserve">
    <value>Cases Participants</value>
  </data>
  <data name="ImportFromCSVStepOneDescription" xml:space="preserve">
    <value>Необходимо выбрать правильно оформленный CSV-файл на жёстком диске Вашего компьютера. Он должен содержать поля или столбцы, разделённые запятой, которые будут использоваться для импорта мероприятий.  Файлы, содержащие более {0} строк, следует разделить на меньшие части для правильного импортирования. Убедитесь, что Вы выбрали только тех пользователей портала, которым необходимо иметь доступ к этой импортируемой информации, иначе данные из CSV-файла станут доступны всем пользователям портала.</value>
  </data>
  <data name="ImportFromCSVStepOneHeader" xml:space="preserve">
    <value>Выберите CSV файл и настройте права доступа для импорта мероприятий</value>
  </data>
  <data name="ImportFromCSVStepTwoDescription" xml:space="preserve">
    <value>Сопоставьте колонки из своего файла с соответствующими полями в TeamLab CRM. Пожалуйста, обратите Ваше внимание на то, что для правильного импорта мероприятий вы должны найти соответствие по крайней мере полю 'Название мероприятия' из Teamlab CRM столбцу из вашего файла. Только после этого Вы сможете перейти к следующему шагу. Поля содержащие дату должны быть заданы форматом {0}. </value>
  </data>
  <data name="ImportFromCSVStepTwoHeader" xml:space="preserve">
    <value>Please, verify the fields</value>
  </data>
  <data name="ImportStartingPanelButton" xml:space="preserve">
    <value>Go to cases list</value>
  </data>
  <data name="ImportStartingPanelDescription" xml:space="preserve">
    <value>Import of  cases can take several minutes depending on the amount of your data. You will be informed when it is done.</value>
  </data>
  <data name="ImportStartingPanelHeader" xml:space="preserve">
    <value>Import started</value>
  </data>
  <data name="StartImport" xml:space="preserve">
    <value>Start Import</value>
  </data>
</root>