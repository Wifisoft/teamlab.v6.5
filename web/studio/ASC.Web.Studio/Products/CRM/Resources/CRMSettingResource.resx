<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCategoryInProgressing" xml:space="preserve">
    <value>Adding category</value>
  </data>
  <data name="AddContactStageInProgressing" xml:space="preserve">
    <value>Adding a type</value>
  </data>
  <data name="AddDealMilestoneInProgressing" xml:space="preserve">
    <value>Adding a stage</value>
  </data>
  <data name="AddFieldInProgressing" xml:space="preserve">
    <value>Adding field</value>
  </data>
  <data name="AddNewCategory" xml:space="preserve">
    <value>Add new category</value>
  </data>
  <data name="AddNewDealMilestone" xml:space="preserve">
    <value>Add new stage</value>
  </data>
  <data name="AddNewField" xml:space="preserve">
    <value>Add new field</value>
  </data>
  <data name="AddNewStage" xml:space="preserve">
    <value>Add new type</value>
  </data>
  <data name="AddNewTag" xml:space="preserve">
    <value>Add new tag</value>
  </data>
  <data name="AddOption" xml:space="preserve">
    <value>Add an Option</value>
  </data>
  <data name="AddTagInProgressing" xml:space="preserve">
    <value>Adding tag</value>
  </data>
  <data name="AddThisCategory" xml:space="preserve">
    <value>Add This Category</value>
  </data>
  <data name="AddThisDealMilestone" xml:space="preserve">
    <value>Add This Stage</value>
  </data>
  <data name="AddThisField" xml:space="preserve">
    <value>Add This Field</value>
  </data>
  <data name="AddThisStage" xml:space="preserve">
    <value>Add This Type</value>
  </data>
  <data name="AddThisTag" xml:space="preserve">
    <value>Add this tag</value>
  </data>
  <data name="BothPersonAndCompany" xml:space="preserve">
    <value>Both Person &amp; Company</value>
  </data>
  <data name="ChangeColor" xml:space="preserve">
    <value>Изменить цвет</value>
  </data>
  <data name="ChangeIcon" xml:space="preserve">
    <value>Change icon</value>
  </data>
  <data name="CheckBox" xml:space="preserve">
    <value>Checkbox</value>
  </data>
  <data name="Cols" xml:space="preserve">
    <value>Columns</value>
  </data>
  <data name="CommonSettings" xml:space="preserve">
    <value>Common Settings</value>
  </data>
  <data name="CreateField" xml:space="preserve">
    <value>Create field</value>
  </data>
  <data name="CustomFieldList" xml:space="preserve">
    <value>User field list</value>
  </data>
  <data name="CustomFields" xml:space="preserve">
    <value>User Fields</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DefaultCurrency" xml:space="preserve">
    <value>Default currency</value>
  </data>
  <data name="DeleteCategory" xml:space="preserve">
    <value>Delete category</value>
  </data>
  <data name="DeleteContactStage" xml:space="preserve">
    <value>Delete type</value>
  </data>
  <data name="DeleteCustomField" xml:space="preserve">
    <value>Delete field</value>
  </data>
  <data name="DeleteDealMilestone" xml:space="preserve">
    <value>Delete stage</value>
  </data>
  <data name="DeleteTag" xml:space="preserve">
    <value>Delete tag</value>
  </data>
  <data name="DeleteUnusedTags" xml:space="preserve">
    <value>Delete unused tags</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionTextTaskCategory" xml:space="preserve">
    <value>Task categories let you divide your tasks into groups depending on the goals you intend to achieve. For instance, a task category can be "Appointment", "Phone

call" or "Expression of gratitude".</value>
  </data>
  <data name="DescriptionTextTaskCategoryEditDelete" xml:space="preserve">
    <value>You can edit or delete the task category stage only in case there are no tasks with this category.</value>
  </data>
  <data name="DescriptionTextContactStage" xml:space="preserve">
    <value>Contact types let you characterize your potential buyers in a certain way. For instance, contact types can be "Cold", "Hot", "Warm", which will mean the contact's willingness to buy your product.</value>
  </data>
  <data name="DescriptionTextContactStageEditDelete" xml:space="preserve">
    <value>You can edit or delete the contact type only in case there are no contacts of this type.</value>
  </data>
  <data name="DescriptionTextDealMilestone" xml:space="preserve">
    <value>Opportunity stages let you determine steps necessary to complete the deal. For instance, you can add opportunity stages "Commercial offer", "Prepayment", "Execution". Set

the necessary order for the opportunity stages dragging them.</value>
  </data>
  <data name="DescriptionTextDealMilestoneEditDelete" xml:space="preserve">
    <value>You can edit or delete the opportunity stage only in case there are no opportunities at this stage.</value>
  </data>
  <data name="DomainName" xml:space="preserve">
    <value>Domain name</value>
  </data>
  <data name="DownloadAllDataInZipArchive" xml:space="preserve">
    <value>Download all data in one ZIP-archive</value>
  </data>
  <data name="DownloadingAllDataInZipArchive" xml:space="preserve">
    <value>ZIP archive generation was started</value>
  </data>
  <data name="EditCategory" xml:space="preserve">
    <value>Update category</value>
  </data>
  <data name="EditContactStage" xml:space="preserve">
    <value>Update type</value>
  </data>
  <data name="EditCustomField" xml:space="preserve">
    <value>Update field</value>
  </data>
  <data name="EditDealMilestone" xml:space="preserve">
    <value>Update stage</value>
  </data>
  <data name="EditSelectedCategory" xml:space="preserve">
    <value>Update «{0}» task category</value>
  </data>
  <data name="EditSelectedContactStage" xml:space="preserve">
    <value>Update «{0}» contact type</value>
  </data>
  <data name="EditSelectedDealMilestone" xml:space="preserve">
    <value>Update «{0}» opportunity stage</value>
  </data>
  <data name="EmailNotification" xml:space="preserve">
    <value>Email notification</value>
  </data>
  <data name="EmailNotificationDescription" xml:space="preserve">
    <value>Select the users which will be notified when adding a new contact using the form</value>
  </data>
  <data name="EmptyContentCustomFields" xml:space="preserve">
    <value>The user field list is empty</value>
  </data>
  <data name="EmptyContentCustomFieldsDescript" xml:space="preserve">
    <value>User fields let you determine additional information about the client, opportunity or case. For instance, you can add the 'Source' field to specify where the user came from: advertisement, direct sale, etc. You can edit or delete the user field only in case there are no contacts or opportunities with this field value.</value>
  </data>
  <data name="AddCustomField" xml:space="preserve">
    <value>Add user field</value>
  </data>
  <data name="EmptyContentTags" xml:space="preserve">
    <value>The tag list is empty</value>
  </data>
  <data name="EmptyContentTagsDescript" xml:space="preserve">
    <value>The tags can be used to describe and group contacts (both companies and persons), opportunities and cases which have something similar in them. For instance, you can tag all the persons from different companies but from the same sphere of business with a common tag for a better sorting. You can edit or delete the tag only in case there are no contacts, opportunities or cases with this tag.</value>
  </data>
  <data name="AddTag" xml:space="preserve">
    <value>Add tag</value>
  </data>
  <data name="EmptyField" xml:space="preserve">
    <value>This field must be filled correctly</value>
  </data>
  <data name="EmptyTaskCategory" xml:space="preserve">
    <value>Task category list is empty</value>
  </data>
  <data name="ExportData" xml:space="preserve">
    <value>Export of all Data</value>
  </data>
  <data name="ExportDataSettingsInfo" xml:space="preserve">
    <value>The export function generates a ZIP-archive containing CSV files with all your CRM data (contacts, opportunities, cases, history, etc.) The email with the link to the created archive will be sent to your email address.</value>
  </data>
  <data name="ExternalClient" xml:space="preserve">
    <value>External client</value>
  </data>
  <data name="FieldList" xml:space="preserve">
    <value>Field list</value>
  </data>
  <data name="FieldsSelection" xml:space="preserve">
    <value>Fields selection</value>
  </data>
  <data name="FieldsSelectionDescription" xml:space="preserve">
    <value>Select the fields which will be displayed on the form</value>
  </data>
  <data name="FormCode" xml:space="preserve">
    <value>Form source code</value>
  </data>
  <data name="FormCodeDescription" xml:space="preserve">
    <value>Use this form on your site</value>
  </data>
  <data name="FormPreview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="FormPreviewDescription" xml:space="preserve">
    <value>This is how the form on your site will look like</value>
  </data>
  <data name="FormProperties" xml:space="preserve">
    <value>Form properties</value>
  </data>
  <data name="FormPropertiesDescription" xml:space="preserve">
    <value>Основные настройки формы добавления новых контатов</value>
  </data>
  <data name="GenerateForm" xml:space="preserve">
    <value>Generate form</value>
  </data>
  <data name="Heading" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="InternalSMTP" xml:space="preserve">
    <value>Internal SMTP ({0} email recipients maximum)</value>
  </data>
  <data name="InvalidDomainName" xml:space="preserve">
    <value>Incorrect domain name</value>
  </data>
  <data name="InvalidReturnURL" xml:space="preserve">
    <value>Incorrect redirection URL</value>
  </data>
  <data name="JustForCompany" xml:space="preserve">
    <value>Just for company</value>
  </data>
  <data name="JustForPerson" xml:space="preserve">
    <value>Just for person</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="Likelihood" xml:space="preserve">
    <value>Success probability</value>
  </data>
  <data name="HostPassword" xml:space="preserve">
    <value>Host Password</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="RemoveOption" xml:space="preserve">
    <value>Delete option</value>
  </data>
  <data name="ReturnURL" xml:space="preserve">
    <value>Redirection URL</value>
  </data>
  <data name="Rows" xml:space="preserve">
    <value>Lines</value>
  </data>
  <data name="SaveCompleted" xml:space="preserve">
    <value>Saved!</value>
  </data>
  <data name="SelectBox" xml:space="preserve">
    <value>Select box</value>
  </data>
  <data name="SelectOptions" xml:space="preserve">
    <value>Choices</value>
  </data>
  <data name="SendData" xml:space="preserve">
    <value>Send data</value>
  </data>
  <data name="SettingCustomFields" xml:space="preserve">
    <value>Customize user fields</value>
  </data>
  <data name="SettingDealMilestone" xml:space="preserve">
    <value>Customize opportunities stages</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="SMTPSettings" xml:space="preserve">
    <value>SMTP Settings</value>
  </data>
  <data name="StartExportData" xml:space="preserve">
    <value>Start data export</value>
  </data>
  <data name="SubmitFormData" xml:space="preserve">
    <value>Отправить данные</value>
  </data>
  <data name="TagList" xml:space="preserve">
    <value>Список тэгов</value>
  </data>
  <data name="TextArea" xml:space="preserve">
    <value>Text area</value>
  </data>
  <data name="TextField" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TitleItem" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="HostLogin" xml:space="preserve">
    <value>Host Login</value>
  </data>
  <data name="WebFormKey" xml:space="preserve">
    <value>Web Form Key</value>
  </data>
  <data name="WebToLeadsForm" xml:space="preserve">
    <value>Website Contact Form</value>
  </data>
  <data name="WebToLeadsFormDescription" xml:space="preserve">
    <value>Use the form shown below to embed in your site</value>
  </data>
  <data name="WebToLeadsFormHeader" xml:space="preserve">
    <value>Use the Website Contact Form functionality to build a form that you can publish on your site allowing you to capture new contacts automatically. Define the form properties, select the necessary fields and generate the code to create your own web form</value>
  </data>
  <data name="WebToLeadsForm_InvalidKeyException" xml:space="preserve">
    <value>Невалидный ключ формы</value>
  </data>
  <data name="YesNo" xml:space="preserve">
    <value>Yes/No</value>
  </data>
  <data name="CurrencySettings" xml:space="preserve">
    <value>Currency Settings</value>
  </data>
  <data name="EnableSSL" xml:space="preserve">
    <value>Enable SSL</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="SenderEmailAddress" xml:space="preserve">
    <value>Sender Email Address</value>
  </data>
  <data name="SenderDisplayName" xml:space="preserve">
    <value>Sender Display Name</value>
  </data>
  <data name="ConfigureTheSMTP" xml:space="preserve">
    <value>Configure the SMTP</value>
  </data>
  <data name="ConfigureTheSMTPInfo" xml:space="preserve">
    <value>SMTP server is not configured. Fill in the fields and click Save. Change the data you can in the Settings section.</value>
  </data>
  <data name="Authentication" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="CurrencySettingsDescription" xml:space="preserve">
    <value>Set up the default currency which will be used to calculate the 'Sum total' for all the opportunities present in the CRM module of your portal. The conversion rates are available for currencies from the list only and are taken from the 'The Money Converter.com' web site.</value>
  </data>
  <data name="SMTPSettingsDescription" xml:space="preserve">
    <value>The SMTP settings are needed to set up an email account which will be used to send emails to the clients from the CRM client database. Please fill in all the fields and click the 'Save' button to enable to be able to send emails right from the portal.</value>
  </data>
  <data name="DownloadLinkText" xml:space="preserve">
    <value>Link to download the ZIP archive</value>
  </data>
  <data name="AccessRightsAndTags" xml:space="preserve">
    <value>Access rights &amp; Tags</value>
  </data>
  <data name="AccessRightsAndTagsDescription" xml:space="preserve">
    <value>Select the users which will be notified when adding contact using the form, otherwise all CRM users will see new contacts, and create tags which will be marked new clients in the list with.</value>
  </data>
  <data name="ReturnURLDescription" xml:space="preserve">
    <value>Адрес страницы вашего сайта куда пользователь будет перенаправлен после отправки данных формы.</value>
  </data>
  <data name="WebFormKeyDescription" xml:space="preserve">
    <value>Уникальный ключ служит для проверки подлинности формы с которой были отправлены данные. Отсутствие ключа при отправки данных формы приводит к возникновению исключения. В случае обновления ключа, существующие формы, сгенерированные со старым ключом,  перестают работать.</value>
  </data>
  <data name="AbortExport" xml:space="preserve">
    <value>Abort export</value>
  </data>
  <data name="EmptyLabelError" xml:space="preserve">
    <value>Every field must have a title</value>
  </data>
  <data name="EmptyTitleError" xml:space="preserve">
    <value>The title field cannot be empty</value>
  </data>
  <data name="NotifyUsers" xml:space="preserve">
    <value>Оповещение {!users}</value>
  </data>
  <data name="NotifyUsersDescription" xml:space="preserve">
    <value>Выберите {!users}, которые будут получать оповещения при добавление нового контакта через "Website Contact Form"</value>
  </data>
  <data name="OtherFields" xml:space="preserve">
    <value>Other fields</value>
  </data>
  <data name="AddNewTaskTemplate" xml:space="preserve">
    <value>Добавить новый шаблон задачи</value>
  </data>
  <data name="AddTaskTemplate" xml:space="preserve">
    <value>Добавить шаблон задачи</value>
  </data>
  <data name="AddTaskTemplateInProgressing" xml:space="preserve">
    <value>Добавление шаблона задачи</value>
  </data>
  <data name="AddThisTaskTemplate" xml:space="preserve">
    <value>Добавить этот шаблон задачи</value>
  </data>
  <data name="DeleteTaskTemplate" xml:space="preserve">
    <value>Удалить шаблон задачи</value>
  </data>
  <data name="EmptyContentTaskTemplates" xml:space="preserve">
    <value>Список шаблонов задач пуст</value>
  </data>
  <data name="EmptyContentTaskTemplatesDescript" xml:space="preserve">
    <value>Шаблоны задач - это новая мега фича. Если лень каждый раз набивать однотипные задачи внутри какой либо сущности просто жмакни шишкой для выбора контейнера шаблонов задач. По каждому из имеющихся в контейнере шаблонов создастся задача с конкретными данными.</value>
  </data>
  <data name="TaskTemplates" xml:space="preserve">
    <value>Шаблоны задач</value>
  </data>
  <data name="EditTaskTemplate" xml:space="preserve">
    <value>Редактировать шаблон задачи</value>
  </data>
  <data name="AddNewTaskTemplateContainer" xml:space="preserve">
    <value>Добавить новый контейнер шаблонов задач</value>
  </data>
  <data name="AddTaskTemplateContainer" xml:space="preserve">
    <value>Добавить контейнер шаблонов задач</value>
  </data>
  <data name="AddTaskTemplateContainerInProgressing" xml:space="preserve">
    <value>Добавление контейнера шаблонов задач</value>
  </data>
  <data name="AddThisTaskTemplateContainer" xml:space="preserve">
    <value>Добавить этот контейнер шаблонов задач</value>
  </data>
  <data name="DeleteTaskTemplateContainer" xml:space="preserve">
    <value>Удалить контейнер шаблонов задач</value>
  </data>
  <data name="EditSelectedTaskTemplate" xml:space="preserve">
    <value>Редактировать «{0}» шаблон задачи</value>
  </data>
  <data name="EditSelectedTaskTemplateContainer" xml:space="preserve">
    <value>Редактировать «{0}» контейнер шаблонов задач</value>
  </data>
  <data name="EditTaskTemplateContainer" xml:space="preserve">
    <value>Редактировать контейнер шаблонов задач</value>
  </data>
  <data name="DescriptionTextHistoryCategory" xml:space="preserve">
    <value>Категории событий истории предоставляют вам возможность разбить ваши события истории на группы. Стандартные категории событий истории - это почта, заметка, звонок, встреча. Чтобы иметь возможность редактировать их, требуются права администратора.</value>
  </data>
  <data name="DescriptionTextHistoryCategoryEditDelete" xml:space="preserve">
    <value>Редактировать или удалять категорию событий истории можно только в случае отсутствия событий истории с данной категорией.</value>
  </data>
  <data name="HistoryCategories" xml:space="preserve">
    <value>History Events Categories</value>
  </data>
  <data name="DisplacementInDays" xml:space="preserve">
    <value>Смещение в днях</value>
  </data>
  <data name="OffsetFromThePreviousTask" xml:space="preserve">
    <value>Отсчитывать от предыдущей задачи</value>
  </data>
  <data name="OffsetFromTheStartOfContainer" xml:space="preserve">
    <value>Отсчитывать от старта контейнера</value>
  </data>
</root>