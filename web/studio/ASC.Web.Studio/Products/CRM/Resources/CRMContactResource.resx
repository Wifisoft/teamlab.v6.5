<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCompanyFormShow" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="AddContact" xml:space="preserve">
    <value>Add contact</value>
  </data>
  <data name="AddEmploee" xml:space="preserve">
    <value>Add employee</value>
  </data>
  <data name="AddEmploeeProgressText" xml:space="preserve">
    <value>Adding employee...</value>
  </data>
  <data name="AddFirstCompany" xml:space="preserve">
    <value>Add the first company</value>
  </data>
  <data name="AddingCompany" xml:space="preserve">
    <value>Adding company...</value>
  </data>
  <data name="AddingPersonProgress" xml:space="preserve">
    <value>Adding contact...</value>
  </data>
  <data name="AddNewAddress" xml:space="preserve">
    <value>Add new address</value>
  </data>
  <data name="AddNewCompany" xml:space="preserve">
    <value>Add new company</value>
  </data>
  <data name="AddNewContact" xml:space="preserve">
    <value>Add new person</value>
  </data>
  <data name="AddNewDeal" xml:space="preserve">
    <value>Add new opportunity</value>
  </data>
  <data name="AddNote" xml:space="preserve">
    <value>Add record</value>
  </data>
  <data name="AddNoteToContact" xml:space="preserve">
    <value>Add event to «{0}»</value>
  </data>
  <data name="AddPersonFormShow" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="Address_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Address_Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Address_State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Address_Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Address_Zip" xml:space="preserve">
    <value>Zip</value>
  </data>
  <data name="AddThisAndCreateCompanyButton" xml:space="preserve">
    <value>Add and Create New Company</value>
  </data>
  <data name="AddThisAndCreatePeopleButton" xml:space="preserve">
    <value>Add and Create New Person</value>
  </data>
  <data name="AddThisCompanyButton" xml:space="preserve">
    <value>Add This Company</value>
  </data>
  <data name="AddThisEmploee" xml:space="preserve">
    <value>Add This Employee</value>
  </data>
  <data name="AddThisPersonButton" xml:space="preserve">
    <value>Add This Person</value>
  </data>
  <data name="AfterStage" xml:space="preserve">
    <value>Contact types</value>
  </data>
  <data name="AllCompanies" xml:space="preserve">
    <value>All companies</value>
  </data>
  <data name="AllCompaniesAndContacts" xml:space="preserve">
    <value>All companies and persons</value>
  </data>
  <data name="AllPersons" xml:space="preserve">
    <value>All persons</value>
  </data>
  <data name="AllPeople" xml:space="preserve">
    <value>all users (except the deleted users)</value>
  </data>
  <data name="AssignContact" xml:space="preserve">
    <value>Link person</value>
  </data>
  <data name="AssignContactFromExisting" xml:space="preserve">
    <value>Select from existing contacts</value>
  </data>
  <data name="BreadCrumbsAddCompany" xml:space="preserve">
    <value>Add company</value>
  </data>
  <data name="BreadCrumbsAddPerson" xml:space="preserve">
    <value>Add person</value>
  </data>
  <data name="ChangePhoto" xml:space="preserve">
    <value>Change photo</value>
  </data>
  <data name="ChooseProfilePhoto" xml:space="preserve">
    <value>Choose a profile photo</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClientStatus" xml:space="preserve">
    <value>Client Status</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompanyAddTask" xml:space="preserve">
    <value>Add task</value>
  </data>
  <data name="CompanyContactInfo" xml:space="preserve">
    <value>Contact Info</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="CompanySearch" xml:space="preserve">
    <value>Find a company</value>
  </data>
  <data name="CompanyStatusFilter" xml:space="preserve">
    <value>Client Status</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="ContactFacebookDescription" xml:space="preserve">
    <value>Enter your Facebook account name. For example, teamlabdotcom</value>
  </data>
  <data name="ContactLinkedInDescription" xml:space="preserve">
    <value>Enter your LinkedIn account name. For example, teamlabdotcom</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Contact Name</value>
  </data>
  <data name="ContactNotFound" xml:space="preserve">
    <value>Contact not found</value>
  </data>
  <data name="ContactPhotoInfo" xml:space="preserve">
    <value>You can upload an image not larger than 200x300 pixels, otherwise resizing will take place. The maximum image size cannot exceed {0}MB.</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="ContactStage" xml:space="preserve">
    <value>Contact Types</value>
  </data>
  <data name="ContactStatus_Cold" xml:space="preserve">
    <value>"Cold"</value>
  </data>
  <data name="ContactStatus_Hot" xml:space="preserve">
    <value>"Hot"</value>
  </data>
  <data name="ContactStatus_Warm" xml:space="preserve">
    <value>"Warm"</value>
  </data>
  <data name="ContactTitle" xml:space="preserve">
    <value>Contact Name</value>
  </data>
  <data name="ContactTwitterDescription" xml:space="preserve">
    <value>Enter your Twitter account name. For example, teamlabdotcom</value>
  </data>
  <data name="ContactType" xml:space="preserve">
    <value>Contact Type</value>
  </data>
  <data name="ContactWebSiteAndSocialProfiles" xml:space="preserve">
    <value>Web Site/Social Networks</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CreateTask" xml:space="preserve">
    <value>Create task</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Companies</value>
  </data>
  <data name="DeleteAddress" xml:space="preserve">
    <value>Delete address</value>
  </data>
  <data name="DeleteContact" xml:space="preserve">
    <value>Delete contact</value>
  </data>
  <data name="DeleteEmail" xml:space="preserve">
    <value>Delete email</value>
  </data>
  <data name="DeleteEmploee" xml:space="preserve">
    <value>Delete employee from this company</value>
  </data>
  <data name="DeletePeople" xml:space="preserve">
    <value>deleted users</value>
  </data>
  <data name="DeletePhone" xml:space="preserve">
    <value>Delete phone</value>
  </data>
  <data name="DeleteThisCompany" xml:space="preserve">
    <value>Delete this company</value>
  </data>
  <data name="DeleteThisPerson" xml:space="preserve">
    <value>Delete this person</value>
  </data>
  <data name="DoNotImportThisField" xml:space="preserve">
    <value>Do not import this field</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="EditCompany" xml:space="preserve">
    <value>Update company «{0}»</value>
  </data>
  <data name="EditPerson" xml:space="preserve">
    <value>Update person «{0}»</value>
  </data>
  <data name="EditProfileCompany" xml:space="preserve">
    <value>Update company</value>
  </data>
  <data name="EditProfilePerson" xml:space="preserve">
    <value>Update person</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmptyClientListHeader" xml:space="preserve">
    <value>There are no contacts or companies with opportunities</value>
  </data>
  <data name="EmptyCompanyAndContactContent" xml:space="preserve">
    <value>There are neither companies not contacts yet</value>
  </data>
  <data name="CreateFirstCompany" xml:space="preserve">
    <value>Create the first company</value>
  </data>
  <data name="EmptyContactListDescription" xml:space="preserve">
    <value>Keep all the contacts your company works with in one place. Add new companies and persons, divide them into {0}types{1}, link with each other, add personal information. Import multiple contacts that you already have from a {2}CSV file{3} at one go.</value>
  </data>
  <data name="TooltipTypes" xml:space="preserve">
    <value>Contact types let you characterize your potential customers in a certain way. The default contact types are cold, warm and hot which mean the contact's willingness to purchase your product. To be able to edit them, the administrator rights are needed.</value>
  </data>
  <data name="TooltipCsv" xml:space="preserve">
    <value>CSV (comma-separated values) files store tabular data in the plain-text form. You can create such files from any spreadsheets using TeamLab Documents.</value>
  </data>
  <data name="EmptyContactListHeader" xml:space="preserve">
    <value>The contact list is empty</value>
  </data>
  <data name="EmptyContactListFilterHeader" xml:space="preserve">
    <value>No contacts to be displayed for this filter here</value>
  </data>
  <data name="EmptyContentPeopleHeader" xml:space="preserve">
    <value>The person list is empty</value>
  </data>
  <data name="EmptyContentPeopleDescribe" xml:space="preserve">
    <value>Add persons here creating new people or linking the existing ones to the companies they work for. When a person is created, you can fill all the contact information for him/her and set the access rights level for other portal users.</value>
  </data>
  <data name="ErrorEmptyCompanyName" xml:space="preserve">
    <value>Enter a company name</value>
  </data>
  <data name="ErrorEmptyContactFirstName" xml:space="preserve">
    <value>Enter a first name</value>
  </data>
  <data name="ErrorEmptyContactLastName" xml:space="preserve">
    <value>Enter a last name</value>
  </data>
  <data name="ErrorEmptyUploadFileSelected" xml:space="preserve">
    <value>The uploaded file could not be found</value>
  </data>
  <data name="EventsAndRelationship" xml:space="preserve">
    <value>Events &amp; Relationship</value>
  </data>
  <data name="Everyone" xml:space="preserve">
    <value>all users (including the deleted users)</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="FindCompanyByName" xml:space="preserve">
    <value>Find a company by name...</value>
  </data>
  <data name="FindContactByName" xml:space="preserve">
    <value>Find a person by name...</value>
  </data>
  <data name="FindEmployeeByName" xml:space="preserve">
    <value>Find an employee by name...</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="GeneralInformation" xml:space="preserve">
    <value>General information</value>
  </data>
  <data name="ImportContacts" xml:space="preserve">
    <value>Import contacts</value>
  </data>
  <data name="ImportFromCSVStepOneDescription" xml:space="preserve">
    <value>A properly formed CSV file should be selected on your computer HDD. It must contain the fields or columns separated by commas which will be used to import persons or companies - 'First Name' and 'Last Name' for persons, 'Company Name' for companies. The files containing more than {0} rows should be divided into smaller parts for proper importing. Make sure you selected the portal users who need to be granted access to the contact details, otherwise the data from the CSV file will be available to all portal users.</value>
  </data>
  <data name="ImportFromCSVStepOneHeader" xml:space="preserve">
    <value>Select a CSV file and set access rights before you import contacts</value>
  </data>
  <data name="ImportFromCSVStepThreeHeader" xml:space="preserve">
    <value>Please, verify the contacts before importing them</value>
  </data>
  <data name="ImportFromCSVStepTwoDescription" xml:space="preserve">
    <value>Сопоставьте колонки из своего файла с соответствующими полями в TeamLab CRM. Пожалуйста, обратите Ваше внимание на то, что для правильного импорта персон по крайней мере один столбец из вашего файла должен соотноситься с полем 'Имя' и один с полем 'Фамилия' в TeamLab CRM. То же самое для импорта компаний: Вам нужно, чтобы было соответствие полю 'Название компании' для того, чтобы была возможность импортировать компании. Только после этого Вы сможете перейти к следующему шагу. Поля содержащие дату должны быть заданы форматом {0}.</value>
  </data>
  <data name="ImportFromCSVStepTwoHeader" xml:space="preserve">
    <value>Please, verify the fields</value>
  </data>
  <data name="ImportPrivatePanelUserList" xml:space="preserve">
    <value>Users with access to the contacts</value>
  </data>
  <data name="Industry" xml:space="preserve">
    <value>Industry</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LoadingPhotoProgress" xml:space="preserve">
    <value>Uploading photo...</value>
  </data>
  <data name="LoadPhoto" xml:space="preserve">
    <value>Upload photo</value>
  </data>
  <data name="LoadPhotoFromPC" xml:space="preserve">
    <value>Upload photo from PC</value>
  </data>
  <data name="LoadPhotoFromSocialMedia" xml:space="preserve">
    <value>or select from the social networks:</value>
  </data>
  <data name="Loyalty" xml:space="preserve">
    <value>Loyalty</value>
  </data>
  <data name="MembersGenitivePlural" xml:space="preserve">
    <value>contacts</value>
  </data>
  <data name="MembersGenitiveSingular" xml:space="preserve">
    <value>contact</value>
  </data>
  <data name="MembersNominative" xml:space="preserve">
    <value>contact</value>
  </data>
  <data name="MergeButtonText" xml:space="preserve">
    <value>This is a duplicate</value>
  </data>
  <data name="MergePanelButtonStartText" xml:space="preserve">
    <value>Start Merging Contacts</value>
  </data>
  <data name="MergePanelDescriptionText" xml:space="preserve">
    <value>Please select the contact which is duplicated by the current contact. The two contact data will be combined and the current contact will be deleted.</value>
  </data>
  <data name="MergePanelHeaderText" xml:space="preserve">
    <value>Merge contacts</value>
  </data>
  <data name="MergePanelProgress" xml:space="preserve">
    <value>Merging contacts...</value>
  </data>
  <data name="NearestTask" xml:space="preserve">
    <value>Nearest task</value>
  </data>
  <data name="NewCompany" xml:space="preserve">
    <value>New company</value>
  </data>
  <data name="NewContact" xml:space="preserve">
    <value>New contact</value>
  </data>
  <data name="NoMatchSelect" xml:space="preserve">
    <value>No matches in TeamLab CRM, select from list</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Persons" xml:space="preserve">
    <value>Persons</value>
  </data>
  <data name="PeopleCreateThisMonth" xml:space="preserve">
    <value>new users per month</value>
  </data>
  <data name="PeopleCreateThisWeek" xml:space="preserve">
    <value>new users per week</value>
  </data>
  <data name="PeopleInCompany" xml:space="preserve">
    <value>Company employees</value>
  </data>
  <data name="PeopleWithoutACompany" xml:space="preserve">
    <value>users outside the company</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="PersonPosition" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="PlannedEvents" xml:space="preserve">
    <value>Planned events</value>
  </data>
  <data name="PrivateCompanyDescription" xml:space="preserve">
    <value>Private company is accessible to certain users with proper access rights.</value>
  </data>
  <data name="PrivateCompanyLabelTex" xml:space="preserve">
    <value>Yes, I understand it. Add the company as private.</value>
  </data>
  <data name="PrivateCompanyTitle" xml:space="preserve">
    <value>Private company</value>
  </data>
  <data name="PrivateCompanyUserListText" xml:space="preserve">
    <value>Users with access to the company</value>
  </data>
  <data name="PrivateContactDescription" xml:space="preserve">
    <value>Private contact is accessible to certain users with proper access rights.</value>
  </data>
  <data name="PrivateContactLabelTex" xml:space="preserve">
    <value>Yes, I understand it. Add the contact as private.</value>
  </data>
  <data name="PrivateContactTitle" xml:space="preserve">
    <value>Private contact</value>
  </data>
  <data name="PrivateContactUserListText" xml:space="preserve">
    <value>Users with access to the contact</value>
  </data>
  <data name="PrivatePanelCheckBoxLabelForCompany" xml:space="preserve">
    <value>Restrict access to the company</value>
  </data>
  <data name="PrivatePanelCheckBoxLabelForPeople" xml:space="preserve">
    <value>Restrict access to the person</value>
  </data>
  <data name="RelationshipEvent_UploadFile" xml:space="preserve">
    <value>Uploaded files</value>
  </data>
  <data name="RelativeEntity" xml:space="preserve">
    <value>Associated identity</value>
  </data>
  <data name="ReturnToPrevStep" xml:space="preserve">
    <value>Previous Step</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="SavePhoto" xml:space="preserve">
    <value>Save photo</value>
  </data>
  <data name="SaveThisAndCreateCompanyButton" xml:space="preserve">
    <value>Save and Create company</value>
  </data>
  <data name="SaveThisAndCreatePeopleButton" xml:space="preserve">
    <value>Save and Create person</value>
  </data>
  <data name="SavingChangesProgress" xml:space="preserve">
    <value>Saving changes...</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchCompanyWatermark" xml:space="preserve">
    <value>Organize companies</value>
  </data>
  <data name="SearchContactWatermark" xml:space="preserve">
    <value>Organize contacts</value>
  </data>
  <data name="SearchText" xml:space="preserve">
    <value>Enter a text to search</value>
  </data>
  <data name="SearchWatermark" xml:space="preserve">
    <value>Find a company or a person...</value>
  </data>
  <data name="SelectCSVFileButton" xml:space="preserve">
    <value>Select a CSV file</value>
  </data>
  <data name="SelectingTag" xml:space="preserve">
    <value>Select a tag...</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="ShowAllSearchResult" xml:space="preserve">
    <value>Show all the results</value>
  </data>
  <data name="ShowContacts" xml:space="preserve">
    <value>Show {0} records at once</value>
  </data>
  <data name="ShowOlderEntries" xml:space="preserve">
    <value>Show older {0} records</value>
  </data>
  <data name="ShowOnMap" xml:space="preserve">
    <value>Show on the map</value>
  </data>
  <data name="SocialMedia" xml:space="preserve">
    <value>Social Media</value>
  </data>
  <data name="Stage" xml:space="preserve">
    <value>Contact type</value>
  </data>
  <data name="StartImport" xml:space="preserve">
    <value>Start importing conacts</value>
  </data>
  <data name="StreetAddress" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Suite" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="Tag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="ViewInfo" xml:space="preserve">
    <value>Show info</value>
  </data>
  <data name="EmptyClientListDescription" xml:space="preserve">
    <value>Нет описания</value>
  </data>
  <data name="AssignPersonFromExisting" xml:space="preserve">
    <value>Select from existing persons</value>
  </data>
  <data name="PrivatePanelCheckBoxLabelForContact" xml:space="preserve">
    <value>Restrict access to the contact</value>
  </data>
  <data name="CreateFirstPerson" xml:space="preserve">
    <value>Create the first person</value>
  </data>
  <data name="ConfirmDeleteSelectedContacts" xml:space="preserve">
    <value />
  </data>
  <data name="ErrorInvalidEmail" xml:space="preserve">
    <value>Email invalid</value>
  </data>
  <data name="Companies" xml:space="preserve">
    <value>Companies</value>
  </data>
  <data name="DeletingContacts" xml:space="preserve">
    <value>Deleting contacts</value>
  </data>
  <data name="ErrorInvalidPhone" xml:space="preserve">
    <value>Phone invalid</value>
  </data>
  <data name="BatchSize" xml:space="preserve">
    <value>Batch size</value>
  </data>
  <data name="BatchSizeInfoText" xml:space="preserve">
    <value>To enable your email program to work efficiently with the size of this list, we suggest sending in batches. You can change the number of recipients per batch if you wish.</value>
  </data>
  <data name="BlindLinkInfoText" xml:space="preserve">
    <value>Hide email addresses from recipients?</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="GenerateLinks" xml:space="preserve">
    <value>Generate links</value>
  </data>
  <data name="Generation" xml:space="preserve">
    <value>Generation</value>
  </data>
  <data name="PersonalTags" xml:space="preserve">
    <value>Personal tags</value>
  </data>
  <data name="AddToLetterBody" xml:space="preserve">
    <value>Add to Letter Body</value>
  </data>
  <data name="TeamlabWatermarkInfo" xml:space="preserve">
    <value>We will add the TeamLab text watermark to your letter like "Powered by TeamLab.com". You can see it in the next (message preview) step.</value>
  </data>
  <data name="AbortMassSend" xml:space="preserve">
    <value>Abort mass send</value>
  </data>
  <data name="MassSendAlreadySent" xml:space="preserve">
    <value>Already sent</value>
  </data>
  <data name="MassSendEmailsTotal" xml:space="preserve">
    <value>E-mails total</value>
  </data>
  <data name="MassSendErrors" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="MassSendEstimatedTime" xml:space="preserve">
    <value>Estimated finish time</value>
  </data>
  <data name="MassSendInfo" xml:space="preserve">
    <value>Thank you for using our Mass Send Feature! {0} Your last send is dtill in progress! Please wait until it done and try again.</value>
  </data>
  <data name="EmptyContactListFilterDescribe" xml:space="preserve">
    <value>No contacts matching your filter can be displayed in this section. Please select other filter options or clear filter to view all the contacts in this section. Or you can create the contact in case it is absent from the list.</value>
  </data>
  <data name="ImportIsCompleted" xml:space="preserve">
    <value>Import is completed</value>
  </data>
  <data name="AllContacts" xml:space="preserve">
    <value>All Contacts</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Lead" xml:space="preserve">
    <value>Lead</value>
  </data>
  <data name="Staff" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="CrunchBaseWatermarkText" xml:space="preserve">
    <value>All selected persons will be added</value>
  </data>
  <data name="EditContact" xml:space="preserve">
    <value>Update contact</value>
  </data>
  <data name="ShowContactProfile" xml:space="preserve">
    <value>Перейти в профиль</value>
  </data>
  <data name="TotalContacts" xml:space="preserve">
    <value>Total contacts</value>
  </data>
  <data name="DeselectAll" xml:space="preserve">
    <value>Deselect all</value>
  </data>
  <data name="ContactTag" xml:space="preserve">
    <value>Contact Tag</value>
  </data>
  <data name="ContactTagList" xml:space="preserve">
    <value>Contact Tag List</value>
  </data>
  <data name="ContactTags" xml:space="preserve">
    <value>Contact Tags</value>
  </data>
  <data name="ImportStartingPanelButton" xml:space="preserve">
    <value>Go to contact list</value>
  </data>
  <data name="ImportStartingPanelDescription" xml:space="preserve">
    <value>Import of contacts can take several minutes depending on the amount of your data. You will be informed when it is done.</value>
  </data>
  <data name="ImportStartingPanelHeader" xml:space="preserve">
    <value>Import started</value>
  </data>
</root>