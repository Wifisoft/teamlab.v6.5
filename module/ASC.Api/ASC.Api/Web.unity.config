<?xml version="1.0"?>

<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <assembly name="ASC.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />

  <alias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="perresolve" type="Microsoft.Practices.Unity.PerResolveLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="appcontrolled" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
  <alias alias="new" type="ASC.Api.Utils.NewInstanceLifetimeManager, ASC.Api" />
  <container>
    <!--basic registration-->
    <register type="ASC.Api.Interfaces.IApiManager" mapTo="ASC.Api.Impl.ApiManager">
      <lifetime type="singleton" />
    </register>
    <register type="ASC.Api.Interfaces.IApiConfiguration" mapTo="ASC.Api.Impl.ApiConfiguration">
      <lifetime type="singleton" />
    </register>
    <register type="ASC.Api.Interfaces.IApiHttpHandler" mapTo="ASC.Api.Impl.ApiHttpHandler">
      <lifetime type="perresolve" />
    </register>
    <register type="ASC.Api.Interfaces.IApiRouteHandler" mapTo="ASC.Api.Impl.ApiRouteHandler">
      <lifetime type="perresolve" />
    </register>
    <register type="ASC.Api.Interfaces.IApiStandartResponce" mapTo="ASC.Api.Impl.ApiStandartResponce">
      <lifetime type="perresolve" />
    </register>
    <register type="ASC.Api.Interfaces.IApiResponceFilter" mapTo="ASC.Api.Impl.ApiSmartListResponceFilter" name="smartfilter">
      <lifetime type="perresolve" />
    </register>
    <register type="ASC.Api.Interfaces.IApiMethodCall" mapTo="ASC.Api.Impl.ApiMethodCall">
      <lifetime type="new" />
    </register>
    <register type="ASC.Api.Interfaces.Cache.IApiCacheMethodKeyBuilder" mapTo="ASC.Api.Impl.ApiCacheKeyBuilder">
      <lifetime type="singleton" />
    </register>
    <register type="ASC.Api.Interfaces.IApiArgumentBuilder" mapTo="ASC.Api.Impl.ApiArgumentBuilder">
      <lifetime type="singleton" />
    </register>
    
    <!--authorization registration-->
    <!--!!! YOU MUST SPECIFY name FOR authorization in order to work !!!-->
    <register type="ASC.Api.Interfaces.IApiAuthorization" mapTo="ASC.Api.Impl.ApiAllowAllAuthorization" name="allowall">
      <lifetime type="singleton" />
    </register>
    
    <!--responders registration-->
    <register type="ASC.Api.Interfaces.IApiResponder" mapTo="ASC.Api.Impl.Responders.ContentResponder" name="content_responder">
      <lifetime type="singleton" />
    </register>
    <register type="ASC.Api.Interfaces.IApiResponder" mapTo="ASC.Api.Impl.Responders.DirectResponder" name="direct_responder">
      <lifetime type="singleton" />
    </register>
    <register type="ASC.Api.Interfaces.IApiResponder" mapTo="ASC.Api.Impl.Serializers.ApiJsonSerializer" name="jsonserialzer">
      <lifetime type="singleton" />
    </register>
    <register type="ASC.Api.Interfaces.IApiResponder" mapTo="ASC.Api.Impl.Serializers.ApiXmlSerializer" name="xmlserializer">
      <lifetime type="singleton" />
    </register>

    <!--storage configuration-->
    <register type="ASC.Api.Interfaces.IApiStoragePath" mapTo="ASC.Api.Impl.ApiStoragePath">
      <lifetime type="singleton" />
    </register>
    <!--storage-->
    <register type="ASC.Api.Interfaces.Storage.IApiKeyValueStorage" mapTo="ASC.Api.Impl.ApiKeyValueInMemoryStorage">
      <lifetime type="singleton" />
    </register>

    <register type="ASC.Api.Interfaces.IApiMethodInvoker" mapTo="ASC.Api.Impl.Invokers.ApiCachedMethodInvoker">
      <lifetime type="singleton" />
    </register>

    <register type="ASC.Api.Interfaces.IApiDocumentGenerator" mapTo="ASC.Api.Impl.DocumentGenerator.MsDocDocumentGenerator" name="xmlserializer">
      <lifetime type="singleton" />
      <constructor>
        <param name="path" value="generated.xml" type="System.String"></param>
      </constructor>
    </register>
    <!--api registration-->
    <!--!!! YOU MUST SPECIFY name FOR register entry point in order to work !!!-->
    
    <!--<register type="ASC.Api.Interfaces.IApiEntryPoint" mapTo="CLASSTYPEANDASSEMBLYNAMEHERE" name="ENTRYNAME">
      <lifetime type="singleton" />
    </register>-->
  </container>
</unity>