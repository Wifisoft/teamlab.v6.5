<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="teamlab" type="ASC.TeamLabSvc.Configuration.TeamLabSvcConfigurationSection, TeamLabSvc" />
    <section name="jabberServer" type="ASC.Xmpp.Common.Configuration.JabberConfigurationSection, ASC.Xmpp.Common" />
    <section name="fullTextIndex" type="ASC.FullTextIndex.Service.Config.TextIndexCfgSectionHandler, ASC.FullTextIndex" />
    <section name="webServer" type="ASC.Web.Host.Config.ServerSection, ASC.Web.Host" />
    <section name="notify" type="ASC.Notify.Config.NotifyServiceCfgSectionHandler, ASC.Notify" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <probing privatePath="Jabber;Index;Web;Notify;x64;x86" />
    </assemblyBinding>
  </runtime>
  <system.data>
    <DbProviderFactories>
      <clear />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data" />
      <add name="SQLite Data Provider" invariant="System.Data.SQLite" description=".Net Framework Data Provider for SQLite" type="System.Data.SQLite.SQLiteFactory, System.Data.SQLite" />
    </DbProviderFactories>
  </system.data>
  <appSettings>
    <add key="core.base-domain" value="" />
  </appSettings>
  <connectionStrings>
    <clear />
    <add name="core" connectionString="Data Source=|DataDirectory|..\Data\Db\Core.db3;Version=3;binaryGuid=false;FailIfMissing=True;Journal Mode=Persist;Pooling=True" providerName="System.Data.SQLite" />
    <add name="roster" connectionString="Data Source=|DataDirectory|..\Data\Db\Roster.db3;Version=3;Journal Mode=Persist" providerName="System.Data.SQLite" />
    <add name="vcard" connectionString="Data Source=|DataDirectory|..\Data\Db\VCard.db3;Version=3;Journal Mode=Persist" providerName="System.Data.SQLite" />
    <add name="offline" connectionString="Data Source=|DataDirectory|..\Data\Db\Offline.db3;Version=3;Journal Mode=Persist" providerName="System.Data.SQLite" />
    <add name="muc" connectionString="Data Source=|DataDirectory|..\Data\Db\Muc.db3;Version=3;Journal Mode=Persist" providerName="System.Data.SQLite" />
    <add name="archive" connectionString="Data Source=|DataDirectory|..\Data\Db\Archive.db3;Version=3;Journal Mode=Persist" providerName="System.Data.SQLite" />
    <add name="private" connectionString="Data Source=|DataDirectory|..\Data\Db\Private.db3;Version=3;Journal Mode=Persist" providerName="System.Data.SQLite" />
    <add name="community" connectionString="Data Source=|DataDirectory|..\Data\Db\Community.db3;Version=3;binaryGuid=false;FailIfMissing=True;Journal Mode=Persist;Pooling=True" providerName="System.Data.SQLite" />
    <add name="crm" connectionString="Data Source=|DataDirectory|..\Data\Db\Crm.db3;Version=3;binaryGuid=false;FailIfMissing=True;Journal Mode=Persist;Pooling=True" providerName="System.Data.SQLite" />
    <add name="files" connectionString="Data Source=|DataDirectory|..\Data\Db\Files.db3;Version=3;binaryGuid=false;FailIfMissing=True;Journal Mode=Persist;Pooling=True" providerName="System.Data.SQLite" />
    <add name="projects" connectionString="Data Source=|DataDirectory|..\Data\Db\Projects.db3;Version=3;binaryGuid=false;FailIfMissing=True;Journal Mode=Persist;Pooling=True" providerName="System.Data.SQLite" />
  </connectionStrings>
  <teamlab>
    <services>
      <add type="ASC.Xmpp.Host.XmppServerLauncher, ASC.Xmpp.Host" disable="false" />
      <add type="ASC.Web.Host.WebServerLauncher, ASC.Web.Host" disable="false" />
      <add type="ASC.FullTextIndex.Service.FullTextIndexLauncher, ASC.FullTextIndex" disable="true" />
    </services>
  </teamlab>
  <webServer>
    <sites>
      <site binding="http://*:8082/" path="..\WebStudio\" />
    </sites>
  </webServer>
  <jabberServer>
    <listeners>
      <add name="Jabber Listener" type="ASC.Xmpp.Server.Gateway.TcpXmppListener">
        <property name="maxpacket" value="524288" />
        <property name="bindPort" value="5222" />
      </add>
      <add name="Bosh Listener" type="ASC.Xmpp.Server.Gateway.BoshXmppListener">
        <property name="maxpacket" value="524288" />
        <property name="bind" value="http://*:5280/http-poll/" />
        <property name="policyFile" value="Jabber\crossdomain.xml" />
      </add>
    </listeners>
    <storages>
      <add name="roster" type="ASC.Xmpp.Host.ASCRosterStore, ASC.Xmpp.Host">
        <property name="connectionStringName" value="roster" />
      </add>
      <add name="vcard" type="ASC.Xmpp.Host.ASCVCardStore, ASC.Xmpp.Host">
        <property name="connectionStringName" value="vcard" />
      </add>
      <add name="users" type="ASC.Xmpp.Host.ASCUserStore, ASC.Xmpp.Host" />
      <add name="offline" type="ASC.Xmpp.Server.Storage.DbOfflineStore">
        <property name="connectionStringName" value="offline" />
      </add>
      <add name="private" type="ASC.Xmpp.Server.Storage.DbPrivateStore">
        <property name="connectionStringName" value="private" />
      </add>
      <add name="muc" type="ASC.Xmpp.Server.Storage.DbMucStore">
        <property name="connectionStringName" value="muc" />
      </add>
      <add name="archive" type="ASC.Xmpp.Server.Storage.DbMessageArchive">
        <property name="connectionStringName" value="archive" />
      </add>
    </storages>
    <services>
      <add jid="" name="creator" type="ASC.Xmpp.Host.CreatorService, ASC.Xmpp.Host">
        <property name="" value="ASC.Xmpp.Server.Services.Jabber.JabberService, ASC.Xmpp.Server" />
        <property name="conference" value="ASC.Xmpp.Server.Services.Muc2.MucService, ASC.Xmpp.Server" />
        <property name="multicast" value="ASC.Xmpp.Server.Services.Multicast.MulticastService, ASC.Xmpp.Server" />
      </add>
    </services>
  </jabberServer>
  <fullTextIndex connectionStringName="core" changedCron="0 0/5 * ? * *" removedCron="0 0 0/5 ? * *" delay="0" indexPath="..\Data\Index\">
    <modules>
      <add name="Blogs" connectionStringName="community"><![CDATA[
        select id, concat_ws(' ', title, content, (select group_concat(t.name) from blogs_tags t where t.tenant = p.tenant and t.post_id = p.id)), 1 from blogs_posts p where LastModified >= @lastModified and Tenant = @tenant
        ]]></add>
      <add name="News" connectionStringName="community"><![CDATA[
        select id, concat_ws(' ', caption, text, (select group_concat(v.name) from events_pollvariant v where v.poll = f.id)), 1 from events_feed f where LastModified >= @lastModified and Tenant = @tenant
        ]]></add>
      <add name="Bookmarks" connectionStringName="community"><![CDATA[
        select BookmarkID, concat_ws(' ', (select k.URL from bookmarking_bookmark k where k.ID = b.BookmarkID), Name, Description, (select group_concat(t.Name) from bookmarking_userbookmarktag bt, bookmarking_tag t where bt.TagID = t.TagID and bt.UserBookmarkID = b.UserBookmarkID)) from bookmarking_userbookmark b where LastModified >= @lastModified and Tenant = @tenant
        ]]></add>
      <add name="Wiki" connectionStringName="community"><![CDATA[
        select pagename, concat_ws(' ', pagename, (select h.body from wiki_pages_history h where h.pagename = p.pagename and h.tenant = p.tenant and h.version = p.version)), 1 from wiki_pages p where p.modified_on >= @lastModified and p.tenant = @tenant
        ]]></add>
      <add name="Forum" connectionStringName="community"><![CDATA[
              select cast(id as char), concat_ws(' ', title, (select group_concat(q.name) from forum_question q where q.tenantid = t.tenantid and q.topic_id = t.id), (select group_concat(tag.name) from forum_tag tag, forum_topic_tag tt where tag.id = tt.tag_id and tt.topic_id = t.id)), 0 from forum_topic t where LastModified >= @lastModified and tenantid = @tenant
        union all select concat(cast(id as char), 'p/', cast(topic_id as char)), text, 1 from forum_post where LastModified >= @lastModified and tenantid = @tenant
        ]]></add>
      <add name="Projects" connectionStringName="projects"><![CDATA[
              select cast(id as char), concat_ws(' ', title, description, (select group_concat(t.title) from projects_tags t, projects_project_tag s where t.id = s.tag_id and p.id = s.project_id)), 0 from projects_projects p where last_modified_on >= @lastModified and tenant_id = @tenant
        union all select concat(cast(id as char), 's/', cast(project_id as char)), title, 0 from projects_milestones where last_modified_on >= @lastModified and tenant_id = @tenant
        union all select concat(cast(id as char), 't/', cast(project_id as char)), concat_ws(' ', title, description), 0 from projects_tasks t where last_modified_on >= @lastModified and tenant_id = @tenant
        union all select concat(cast(id as char), 'm/', cast(project_id as char)), concat_ws(' ', title, content), 1 from projects_messages where last_modified_on >= @lastModified and tenant_id = @tenant
        ]]></add>
      <add name="CRM.Contacts" connectionStringName="crm"><![CDATA[
        select  concat("contact_", cast(id as char)), concat_ws(' ', first_name, last_name, company_name, title, notes, industry) from crm_contact where tenant_id = @tenant and last_modifed_on >= @lastModified
        union all select  concat("contactInfo", cast(id as char),"_", cast(contact_id as char) ), data from crm_contact_info where tenant_id = @tenant and last_modifed_on >= @lastModified
        union all select concat("customField", cast(field_id as char),"_", cast(entity_id as char)), value from crm_field_value where tenant_id = @tenant and entity_type in (0,4,5) and last_modifed_on >= @lastModified
        union all select  concat("relationshipEvent", cast(id as char),"_", cast(contact_id as char) ), content from crm_relationship_event where tenant_id = @tenant and contact_id !=0 and last_modifed_on >= @lastModified
        ]]></add>
      <add name="CRM.Deals" connectionStringName="crm"><![CDATA[
        select concat("deal_", cast(id as char)), concat_ws(' ', title, description) from crm_deal where last_modifed_on >= @lastModified and tenant_id = @tenant
        union all select concat("customField", cast(field_id as char),"_", cast(entity_id as char)), value from crm_field_value where tenant_id = @tenant and entity_type = 1 and last_modifed_on >= @lastModified 
        union all select  concat("relationshipEvent", cast(id as char),"_", cast(entity_id as char) ), content from crm_relationship_event where tenant_id = @tenant and entity_id !=0 and entity_type = 1 and last_modifed_on >= @lastModified 
        ]]></add>
      <add name="CRM.Tasks" connectionStringName="crm"><![CDATA[
        select cast(id as char),  concat_ws(' ', title, description) from crm_task where last_modifed_on >= @lastModified and tenant_id = @tenant
        ]]></add>
      <add name="CRM.Cases" connectionStringName="crm"><![CDATA[
        select concat("cases_", cast(id as char)), concat_ws(' ', title) from crm_case where last_modifed_on >= @lastModified and tenant_id = @tenant
        union all select concat("customField", cast(field_id as char) ,"_",  cast(entity_id as char)), value from crm_field_value where tenant_id = @tenant and entity_type = 7 and last_modifed_on >= @lastModified 
        union all select  concat("relationshipEvent", cast(id as char),"_", cast(entity_id as char) ), content from crm_relationship_event where tenant_id = @tenant and entity_id !=0 and entity_type = 7 and last_modifed_on >= @lastModified
        ]]></add>
      <add name="Files" connectionStringName="files"><![CDATA[
        select cast(f.id as char), replace(f.title, '.', ' ') from files_file f where f.tenant_id = @tenant and f.modified_on >= @lastModified and f.current_version = 1
        union all select concat('d', cast(id as char)), replace(title, '.', ' ') from files_folder where tenant_id = @tenant and modified_on >= @lastModified
        ]]></add>
    </modules>
  </fullTextIndex>
  <system.serviceModel>
    <services>
      <service name="ASC.Xmpp.Host.JabberService">
        <endpoint address="net.tcp://localhost:9865/teamlabJabber" binding="netTcpBinding" contract="ASC.Core.Notify.Jabber.IJabberService" bindingConfiguration="jabber" />
      </service>
      <service name="ASC.FullTextIndex.Service.TextSearcherService">
        <endpoint address="net.tcp://localhost:9866/teamlabSearcher" binding="netTcpBinding" contract="ASC.FullTextIndex.ITextIndexService" />
      </service>
    </services>
    <bindings>
      <netTcpBinding>
        <binding name="jabber">
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="notify">
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
      </netTcpBinding>
      <netMsmqBinding>
        <binding name="notify" exactlyOnce="false">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
      </netMsmqBinding>
    </bindings>
    <client>
      <endpoint address="net.tcp://localhost:9865/teamlabJabber" binding="netTcpBinding" contract="ASC.Core.Notify.Jabber.IJabberService" bindingConfiguration="jabber" />
    </client>
  </system.serviceModel>
  <log4net>
    <logger name="ASC">
      <appender-ref ref="Console" />
      <appender-ref ref="File" />
      <level value="WARN" />
    </logger>
    <logger name="ASC.SQL" additivity="false">
      <appender-ref ref="Sql" />
      <level value="OFF" />
    </logger>
    <appender name="Console" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="File" type="log4net.Appender.RollingFileAppender">
      <file value="..\Logs\TeamLab.log" />
      <encoding value="utf-8" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="50MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %-5level [%thread] %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="Sql" type="log4net.Appender.RollingFileAppender">
      <file value="..\Logs\TeamLab.SQL.log" />
      <encoding value="utf-8" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="50MB" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate|%thread|%property{duration}|%message|%property{sql}|%property{sqlParams}%newline" />
      </layout>
    </appender>
  </log4net>
</configuration>